const express = require('express');
const app = express();
const path = require('path');
const fs = require('fs');

// ุฅุนุฏุงุฏุงุช ุงูู EJS ูุงููุฌูุฏุงุช
app.set('views', './views');
app.set('view engine', 'ejs');
app.use(express.static('public'));
app.use(express.urlencoded({ extended: true }));

// ุชุญููู ูููุงุช JSON ุงูุนุงุฏูุฉ (ุชุฃูุฏ ุฅู ุงููุณุงุฑุงุช ุตุญูุญุฉ)
const data = JSON.parse(fs.readFileSync('data.json', 'utf-8'));
const soilData = JSON.parse(fs.readFileSync('soil_data.json', 'utf-8'));
const productivityData = JSON.parse(fs.readFileSync('productivityData.json', 'utf-8'));

// ุชุญููู ููู JSON ุจูุงูุงุช ูุณุจ ุงูุนูุงุตุฑ ูููุจุงุชุงุช - ููุญุฏู (ูู ููุณ ูุณุงุฑ index.js)
const plantNutrientData = JSON.parse(fs.readFileSync('plant_nutrient_ranges.json', 'utf-8'));

// ุนุฏุงุฏ ุงูุฒูุงุฑ
let visitors = 0;

// ุงูุตูุญุฉ ุงูุฑุฆูุณูุฉ
app.get('/', (req, res) => {
  visitors++;
  res.render('landing', { visitors });
});

// ููุญุฉ ุงูุชุญูู
app.get('/dashboard', (req, res) => {
  visitors++;
  res.render('dashboard', { visitors });
});

// ูุงุฆูุฉ ุงููุจุงุชุงุช
app.get('/plants', (req, res) => {
  visitors++;
  res.render('plants', { data, visitors });
});

// ุตูุญุฉ ุงูุชุญููู
app.get('/analysis', (req, res) => {
  visitors++;
  res.render('analysis', { visitors });
});

// ุตูุญุฉ ุงูุชุฑุจุฉ
app.get('/soil', (req, res) => {
  visitors++;
  res.render('soil', { soil: soilData, visitors });
});

// ุตูุญุฉ ุฒูุงุฏุฉ ุงูุฅูุชุงุฌ ุงูุฑุฆูุณูุฉ
app.get('/productivity', (req, res) => {
  visitors++;
  res.render('productivity', { visitors, productivityData });
});

// ุตูุญุงุช ุงูุนูุงุตุฑ ุงููุฎุชููุฉ
app.get('/productivity/minerals', (req, res) => {
  visitors++;
  const minerals = productivityData["ุงูุนูุงุตุฑ ุงููุนุฏููุฉ"] || [];
  res.render('productivity/minerals', { minerals, visitors });
});

app.get('/productivity/organics', (req, res) => {
  visitors++;
  const organics = productivityData["ุงูุนูุงุตุฑ ุงูุนุถููุฉ"] || [];
  res.render('productivity/organics', { organics, visitors });
});

app.get('/productivity/chemicals', (req, res) => {
  visitors++;
  const chemicals = {
    "ุงูุฃุณูุฏุฉ": productivityData["ุงูุฃุณูุฏุฉ"] || [],
    "ุงููุจูุฏุงุช": productivityData["ุงููุจูุฏุงุช"] || []
  };
  res.render('productivity/chemicals', { chemicals, visitors });
});

// ุจูุงูุงุช ุงูุฃูุฑุงุถ
const diseasesRawData = JSON.parse(fs.readFileSync(path.join(__dirname, 'diseases_data.json'), 'utf-8'));
const diseasesData = diseasesRawData["ุงูุฃูุฑุงุถ"];

const diseaseTypes = {
  fungal: "ูุทุฑู",
  insects: "ุญุดุฑู",
  virus: "ููุฑูุณู",
  nematode: "ูููุงุชูุฏู"
};

// ุตูุญุฉ ุงุฎุชูุงุฑ ุชุตููู ุงููุฑุถ
app.get('/diseases', (req, res) => {
  visitors++;
  res.render('diseases', { visitors });
});

// ููู ููุน ูุฑุถ ุตูุญุฉ ูุงุฆูุฉ ุงูุฃูุฑุงุถ
Object.entries(diseaseTypes).forEach(([routeType, typeName]) => {
  app.get(`/diseases/${routeType}`, (req, res) => {
    visitors++;
    const filteredDiseases = diseasesData.filter(d => d.ููุน === typeName);
    res.render(`diseases/diseases_${routeType}`, { visitors, diseases: filteredDiseases, routeType, typeName });
  });

  // ุตูุญุฉ ุชูุงุตูู ุงููุฑุถ
  app.get(`/disease/${routeType}/:name`, (req, res) => {
    visitors++;
    const diseaseName = decodeURIComponent(req.params.name);
    const disease = diseasesData.find(d => d.ููุน === typeName && d.ุงูุงุณู === diseaseName);
    if (!disease) return res.status(404).send('โ ุงููุฑุถ ุบูุฑ ููุฌูุฏ');
    res.render('diseases/disease_detail', { visitors, disease, routeType });
  });
});

const camelData = JSON.parse(fs.readFileSync(path.join(__dirname, 'camel.json'), 'utf8'));
const buffaloData = JSON.parse(fs.readFileSync(path.join(__dirname, 'buffalo.json'), 'utf8'));
const cattleData = JSON.parse(fs.readFileSync(path.join(__dirname, 'cattle.json'), 'utf8'));
const sheepData = JSON.parse(fs.readFileSync(path.join(__dirname, 'sheep.json'), 'utf8'));
const goatsData = JSON.parse(fs.readFileSync(path.join(__dirname, 'goats.json'), 'utf8'));

const animalsSummary = [
  { key: 'ุงูุฅุจู', data: camelData['ุงูุฅุจู'] },
  { key: 'ุงูุฌุงููุณ', data: buffaloData['ุงูุฌุงููุณ'] },
  { key: 'ุงูุจูุฑ', data: cattleData['ุงูุจูุฑ'] },
  { key: 'ุงูุบูู', data: sheepData['ุงูุบูู'] },
  { key: 'ุงููุงุนุฒ', data: goatsData['ุงููุงุนุฒ'] }
];

// ุนุฏุงุฏ ุฒูุงุฑ

// ุฒูุงุฏุฉ ุนุฏุงุฏ ุงูุฒูุงุฑ ูุฃู ุฑูุช ุชุญุช /animals
app.use('/animals', (req, res, next) => {
  visitors++;
  next();
});

// ุงูุตูุญุฉ ุงูุฑุฆูุณูุฉ
app.get('/', (req, res) => {
  res.send(`<h1>ูุฑุญุจุงู ุจู ูู ูููุน ูุนูููุงุช ุงูุญููุงูุงุช ุงูุฒุฑุงุนูุฉ</h1>
    <p><a href="/animals">ุนุฑุถ ุงูููุงุดู</a></p>`);
});

// ุตูุญุฉ ูุงุฆูุฉ ุฃููุงุน ุงูููุงุดู
app.get('/animals', (req, res) => {
  // ูุงุฆูุฉ ุชุถู ูุฆุงุช ุงูุญููุงูุงุช - ุฃูุช ูููู ุชุถูู ุฃููุงุน ุฃุฎุฑู ูุซู ุงูุทููุฑ ูุงูุฃุณูุงู ููุง
  res.render('animals', {
    animals: [
      { key: 'ุงูููุงุดู', link: '/animals/cattle' },
      { key: 'ุงูุทููุฑ', link: '/animals/birds' },
      { key: 'ุงูุฃุณูุงู', link: '/animals/fish' }
    ],
    visitors
  });
});

// ุตูุญุฉ ูุงุฆูุฉ ุงูููุงุดู (ุงูุฃููุงุน: ุงูุฅุจูุ ุงูุฌุงููุณุ ุงูุจูุฑุ ุงูุบููุ ุงููุงุนุฒ)
app.get('/animals/cattle', (req, res) => {
  res.render('animals/cattle', {
    animals: animalsSummary,
    visitors
  });
});

// ุตูุญุฉ ุชูุงุตูู ููุน ุงูููุงุดู (ูุซู ุงูุฅุจู)
app.get('/animals/cattle/:type', (req, res) => {
  const type = decodeURIComponent(req.params.type);
  const animalEntry = animalsSummary.find(a => a.key === type);
  if (!animalEntry) return res.status(404).send('ููุน ุงูููุงุดู ุบูุฑ ููุฌูุฏ');

  res.render('animals/animal-details', {
    animal: animalEntry.data,
    type: animalEntry.key,
    visitors,
    breed: null
  });
});

// ุตูุญุฉ ุชูุงุตูู ุณูุงูุฉ ูุญุฏุฏุฉ ูู ููุน ูุนูู
app.get('/animals/cattle/:type/:breed', (req, res) => {
  const type = decodeURIComponent(req.params.type);
  const breedName = decodeURIComponent(req.params.breed);

  const animalEntry = animalsSummary.find(a => a.key === type);
  if (!animalEntry) return res.status(404).send('ููุน ุงูููุงุดู ุบูุฑ ููุฌูุฏ');

  const breedData = animalEntry.data.ุงูุณูุงูุงุช.find(b => b.ุงุณู_ุงูุณูุงูุฉ === breedName);
  if (!breedData) return res.status(404).send('ุงูุณูุงูุฉ ุบูุฑ ููุฌูุฏุฉ');

  res.render('animals/animal-details', {
    animal: animalEntry.data,
    type: animalEntry.key,
    visitors,
    breed: breedData
  });
});

const birdsData = JSON.parse(fs.readFileSync(path.join(__dirname, 'birds.json'), 'utf8'));
const fishData = JSON.parse(fs.readFileSync(path.join(__dirname, 'fish.json'), 'utf8'));

// ุตูุญุฉ ุงูุทููุฑ - ุนุฑุถ ุงููุงุฆูุฉ

app.get('/animals/birds', (req, res) => {
  visitors++;  // ุฒูุงุฏุฉ ุงูุฒูุงุฑ ูู ุฒูุงุฑุฉ ููุตูุญุฉ
  res.render('animals/birds', { 
    type: 'ุทููุฑ',
    animals: birdsData,
    visitors: visitors
  });
});


// ุตูุญุฉ ุชูุงุตูู ุทุงุฆุฑ ูุนูู
app.get('/animals/birds/:birdKey', (req, res) => {
  const birdKey = req.params.birdKey;
  const bird = birdsData.find(b => b["ููุชุงุญ"] === birdKey);  // ูุจุญุซ ุญุณุจ "ููุชุงุญ"
  if (!bird) return res.status(404).send('ุบูุฑ ููุฌูุฏ');

  res.render('animals/birds-detail', { type: 'ุทููุฑ', animal: bird });
});

// ุตูุญุฉ ุงูุฃุณูุงู - ุนุฑุถ ุงููุงุฆูุฉ
app.get('/animals/fish', (req, res) => {
  visitors++; // ุฒูุงุฏุฉ ุนุฏุฏ ุงูุฒูุงุฑ ููู ุฒูุงุฑุฉ
  res.render('animals/fish', { 
    type: 'ุฃุณูุงู',
    animals: fishData,
    visitors: visitors
  });
});

// ุตูุญุฉ ุชูุงุตูู ุณููุฉ ูุนููุฉ
app.get('/animals/fish/:fishKey', (req, res) => {
  const fishKey = req.params.fishKey;
  const fish = fishData.find(f => f["ููุชุงุญ"] === fishKey);  // ุงูุจุญุซ ุจุงุณุชุฎุฏุงู ููุชุงุญ
  if (!fish) return res.status(404).send('ุบูุฑ ููุฌูุฏ');

  res.render('animals/fish-detail', { type: 'ุฃุณูุงู', animal: fish });
});



// ุนุฑุถ ูุจุงุช ูุนูู
app.get('/plant/:plantName', (req, res) => {
  visitors++;
  const plantName = decodeURIComponent(req.params.plantName);
  const plant = data.find(p => p["ุงุณู"] === plantName);
  if (!plant) return res.status(404).send("โ ุงููุจุงุช ุบูุฑ ููุฌูุฏ");

  const diseases = plant["ุงูุฃูุฑุงุถ"] ? Object.keys(plant["ุงูุฃูุฑุงุถ"]) : [];
  res.render('plant', { plant, diseases, visitors });
});

// ุนุฑุถ ูุฑุถ ูุนูู ุฏุงุฎู ูุจุงุช
app.get('/plant/:plantName/disease/:diseaseName', (req, res) => {
  visitors++;
  const plantName = decodeURIComponent(req.params.plantName);
  const diseaseName = decodeURIComponent(req.params.diseaseName);

  const plant = data.find(p => p["ุงุณู"] === plantName);
  if (!plant) return res.status(404).send("โ ุงููุจุงุช ุบูุฑ ููุฌูุฏ");

  const disease = plant["ุงูุฃูุฑุงุถ"] ? plant["ุงูุฃูุฑุงุถ"][diseaseName] : null;
  if (!disease) return res.status(404).send("โ ุงููุฑุถ ุบูุฑ ููุฌูุฏ");

  res.render('disease', { plant, diseaseName, disease, visitors });
});

// **ุงููุณุงุฑ ุงูุฌุฏูุฏ** ุตูุญุฉ ูุณุจ ุงูุนูุงุตุฑ ุงููุซุงููุฉ ูููุจุงุชุงุช
app.get('/plant-nutrient-ranges', (req, res) => {
  visitors++;
  res.render('plant_nutrients', { plantNutrientData, visitors });
});

// ุชุดุบูู ุงูุณูุฑูุฑ
app.listen(3000, () => {
  console.log('๐ข Server running on http://localhost:3000');
});
